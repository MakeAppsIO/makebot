{"version":3,"sources":["dialogs/summary.js"],"names":["_botbuilder","require","_emailToMakeApps","_equals","_humanizePlus","_pick","_pluck","fields","name","display","filterFields","_pick2","default","_pluck2","giveSummary","session","send","data","privateConversationData","newOrExisting","type","find","_equals2","users","description","stack","history","devs","team","location","startDate","handleConfirmation","response","endDialog","_ref","looksCorrect","_emailToMakeApps2"],"mappings":"2IAAA,IAAAA,aAAAC,QAAA,+DACAC,iBAAAD,QAAA,qFACAE,QAAAF,QAAA,6DACAG,cAAAH,QAAA,iBACAI,MAAAJ,QAAA,uDACAK,OAAAL,QAAA,0DAEMM,SACFC,KAAM,OAAQC,QAAS,gBACvBD,KAAM,gBAAiBC,QAAS,qBARpCD,KAAA,YAAAC,QAAA,cAUID,KAAM,QAASC,QAAS,eACxBD,KAAM,cAAeC,QAAS,gBAC9BD,KAAM,QAASC,QAAS,eAX5BD,KAAA,UAAAC,QAAA,YAaID,KAAM,OAAQC,QAAS,cACvBD,KAAM,OAAQC,QAAS,oBACvBD,KAAM,WAAYC,QAAS,aAd/BD,KAAA,YAAAC,QAAA,eAgBID,KAAM,UAAWC,QAAS,YAGxBC,cAAe,EAAAC,OAAAC,UAAK,EAAAC,QAAAD,SAAM,OAAQL,SAjBxCO,YAAA,SAAAC,GAoBEA,EAAQC,KAAK,4CACb,IAAMC,GAAOP,aAAaK,EAAQG,wBAElCH,GAAQC,KAA4B,eAAvBC,EAAKE,cAAL,2BACgBF,EAAKG,KADrB,IAAA,kCApBGX,EAASW,MAyBzBL,EAAQC,KATJF,EAAAA,UAAcO,MAAA,EAAAC,SAAAV,SAAdE,aACJC,uDADID,yBAEsBC,EAAAA,cAAAA,QAAQG,EAAAA,WAF9BJ,eAeJC,EAAQC,KALNC,aADFF,EAAAA,MAQI,4CARJA,kBAOOQ,EAALA,MAPFR,WAYAA,EAAQC,KAAR,sBAAmCC,EAAKG,KAAxC,QAAoDH,EAAKO,YAAzD,KAGET,EAAAA,OACDA,EAAAC,KAAA,QAAAC,EAAAG,KAAA,YAAAH,EAAAQ,MAAA,KAGCV,EAAAA,SACDA,EAAAC,KAAA,QAAAC,EAAAG,KAAA,gCAAAH,EAAAS,QAAA,KAEDX,EAAQC,KAAR,qBAAkCC,EAAKU,KAAvC,iBAEAZ,EAAQC,KAMR,aAAAD,EAAAA,KAJI,oEAIJA,6BAGqBE,EAAAW,KAHrBb,KAAAA,EAAQC,KAAR,sBAAmCC,EAAKY,UAvC1Cd,EAAAC,KA0CuB,aAAnBC,EAAKa,UAUHC,gDAVF,2BAUmCC,EAA6BF,WAEhEf,EAAME,KAAN,iCAAkCC,EAAAA,SAElCH,aAAAA,QAAAA,QAAQkB,QAAUlB,EAAA,8BAGnBgB,mBAAA,SAAAhB,EAAAmB,GAAA,GAAAC,GAAAD,EAAAF,QAPH,IAAAG,EAAA,CAEI,GAAMlB,GAAOP,aAAaK,EAAQG,0BAClC,EAAAkB,kBAAAxB,SAQFE,GAPEC,EAAQkB,UAAU,+CAElBlB,GAAQkB,UAAU,iHAKpBnB,YACAiB","file":"summary.js","sourcesContent":["import builder from 'botbuilder';\nimport emailToMakeApps from '../lib/emailToMakeApps';\nimport equals from 'lodash/fp/equals';\nimport { oxford } from 'humanize-plus';\nimport pick from 'lodash/fp/pick';\nimport pluck from 'lodash/fp/pluck';\n\nconst fields = [\n  { name: 'type', display: 'App or bot?' },\n  { name: 'newOrExisting', display: 'New or existing?' },\n  { name: 'platforms', display: 'Platforms' },\n  { name: 'users', display: '# of users' },\n  { name: 'description', display: 'Description' },\n  { name: 'stack', display: 'Tech stack' },\n  { name: 'history', display: 'History' },\n  { name: 'devs', display: '# of devs' },\n  { name: 'team', display: 'Work with team?' },\n  { name: 'location', display: 'Location' },\n  { name: 'startDate', display: 'Start date' },\n  { name: 'contact', display: 'Contact' },\n];\n\nconst filterFields = pick(pluck('name', fields));\n\nconst giveSummary = session => {\n  session.send('Okay, let me see if I have this straight.');\n  const data = filterFields(session.privateConversationData);\n\n  session.send(data.newOrExisting === 'greenfield' ?\n    `You want to build a new ${data.type}.` :\n    `You need help with an existing ${data.type}`,\n  );\n\n  session.send(\n    data.platforms.find(equals('Not sure')) ?\n      'You\\'re not sure what platforms you\\'re interested in.' :\n      `You're interested in ${oxford(data.platforms)} platforms.`,\n  );\n\n  session.send(\n    data.users === 'Not sure' ?\n      'You\\'re not sure how many users you expect' :\n      `You anticipate ${data.users} users.`,\n  );\n\n  session.send(`You described your ${data.type} as \"${data.description}\"`);\n\n  if (data.stack) {\n    session.send(`Your ${data.type} runs on ${data.stack}.`);\n  }\n\n  if (data.history) {\n    session.send(`Your ${data.type} has been in development for ${data.history}.`);\n  }\n\n  session.send(`You say you need \"${data.devs}\" developers.`);\n\n  session.send(\n    data.team === 'not sure' ?\n      'You\\'re not sure whether you want us to work with a team or alone.' :\n      `Make Apps will be working ${data.team}.`,\n  );\n\n  session.send(`You are located in ${data.location}`);\n\n  session.send(\n    data.startDate === 'not sure' ?\n      'You\\'re not sure when you want to get started.' :\n      `You want to get started ${data.startDate}`,\n  );\n\n  session.send(`You told us to contact you by ${data.contact}`);\n\n  builder.Prompts.confirm(session, 'Does this all look right?');\n};\n\nconst handleConfirmation = (session, { response: looksCorrect }) => {\n  if (looksCorrect) {\n    const data = filterFields(session.privateConversationData);\n    emailToMakeApps(data);\n    session.endDialog('Great! We\\'ll be in touch with you soon.');\n  } else {\n    session.endDialog('Ah, whoops. Soon you\\'ll be able to correct your entries, but for now we have to start over.');\n  }\n};\n\nexport default [\n  giveSummary,\n  handleConfirmation,\n];\n"]}