{"version":3,"sources":["dialogs/summary.js"],"names":["builder","require","emailToMakeApps","equals","oxford","pick","pluck","fields","name","display","filterFields","giveSummary","session","send","data","privateConversationData","newOrExisting","type","platforms","find","users","description","stack","history","devs","team","location","startDate","contact","Prompts","confirm","handleConfirmation","response","looksCorrect","endDialog","module","exports"],"mappings":"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","file":"summary.js","sourcesContent":["const builder = require('botbuilder');\nconst emailToMakeApps = require('../lib/emailToMakeApps');\nconst equals = require('lodash/fp/equals');\nconst { oxford } = require('humanize-plus');\nconst pick = require('lodash/fp/pick');\nconst pluck = require('lodash/fp/pluck');\n\nconst fields = [\n  { name: 'type', display: 'App or bot?' },\n  { name: 'newOrExisting', display: 'New or existing?' },\n  { name: 'platforms', display: 'Platforms' },\n  { name: 'users', display: '# of users' },\n  { name: 'description', display: 'Description' },\n  { name: 'stack', display: 'Tech stack' },\n  { name: 'history', display: 'History' },\n  { name: 'devs', display: '# of devs' },\n  { name: 'team', display: 'Work with team?' },\n  { name: 'location', display: 'Location' },\n  { name: 'startDate', display: 'Start date' },\n  { name: 'contact', display: 'Contact' },\n];\n\nconst filterFields = pick(pluck('name', fields));\n\nconst giveSummary = session => {\n  session.send('Okay, let me see if I have this straight.');\n  const data = filterFields(session.privateConversationData);\n\n  session.send(data.newOrExisting === 'greenfield' ?\n    `You want to build a new ${data.type}.` :\n    `You need help with an existing ${data.type}`,\n  );\n\n  session.send(\n    data.platforms.find(equals('Not sure')) ?\n      'You\\'re not sure what platforms you\\'re interested in.' :\n      `You're interested in ${oxford(data.platforms)} platforms.`,\n  );\n\n  session.send(\n    data.users === 'Not sure' ?\n      'You\\'re not sure how many users you expect' :\n      `You anticipate ${data.users} users.`,\n  );\n\n  session.send(`You described your ${data.type} as \"${data.description}\"`);\n\n  if (data.stack) {\n    session.send(`Your ${data.type} runs on ${data.stack}.`);\n  }\n\n  if (data.history) {\n    session.send(`Your ${data.type} has been in development for ${data.history}.`);\n  }\n\n  session.send(`You say you need \"${data.devs}\" developers.`);\n\n  session.send(\n    data.team === 'not sure' ?\n      'You\\'re not sure whether you want us to work with a team or alone.' :\n      `Make Apps will be working ${data.team}.`,\n  );\n\n  session.send(`You are located in ${data.location}`);\n\n  session.send(\n    data.startDate === 'not sure' ?\n      'You\\'re not sure when you want to get started.' :\n      `You want to get started ${data.startDate}`,\n  );\n\n  session.send(`You told us to contact you by ${data.contact}`);\n\n  builder.Prompts.confirm(session, 'Does this all look right?');\n};\n\nconst handleConfirmation = (session, { response: looksCorrect }) => {\n  if (looksCorrect) {\n    const data = filterFields(session.privateConversationData);\n    emailToMakeApps(data);\n    session.endDialog('Great! We\\'ll be in touch with you soon.');\n  } else {\n    session.endDialog('Ah, whoops. Soon you\\'ll be able to correct your entries, but for now we have to start over.');\n  }\n};\n\nmodule.exports = [\n  giveSummary,\n  handleConfirmation,\n];\n"]}