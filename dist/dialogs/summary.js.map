{"version":3,"sources":["dialogs/summary.js"],"names":["_botbuilder","require","_equals","_humanizePlus","_pick","_pluck","fields","name","display","filterFields","_pick2","default","_pluck2","giveSummary","session","send","data","privateConversationData","newOrExisting","type","platforms","find","_equals2","oxford","users","description","history","stack","team","location","looksCorrect","startDate","contact","_botbuilder2","Prompts","confirm","handleConfirmation","_ref","response","endDialog"],"mappings":"2IAAA,IAAAA,aAAAC,QAAA,+DACAC,QAAAD,QAAA,6DACAE,cAAAF,QAAA,iBACAG,MAAAH,QAAA,uDACAI,OAAAJ,QAAA,0DAJAK,SAOIC,KAAM,OAAQC,QAAS,gBACvBD,KAAM,gBAAiBC,QAAS,qBAChCD,KAAM,YAAaC,QAAS,cARhCD,KAAA,QAAAC,QAAA,eAUID,KAAM,cAAeC,QAAS,gBAC9BD,KAAM,QAASC,QAAS,eACxBD,KAAM,UAAWC,QAAS,YAX9BD,KAAA,OAAAC,QAAA,cAaID,KAAM,OAAQC,QAAS,oBAZ3BD,KAAA,WAAAC,QAAA,aAcID,KAAM,YAAaC,QAAS,eAC5BD,KAAM,UAAWC,QAAS,YAGxBC,cAAe,EAAAC,OAAAC,UAAK,EAAAC,QAAAD,SAAM,OAAQL,SAElCO,YAAc,SAAAC,GAClBA,EAAQC,KAAK,4CACb,IAAMC,GAAOP,aAAaK,EAAQG,wBAElCH,GAAQC,KAA4B,eAAvBC,EAAKE,cAAL,2BANMF,EAAAG,KAMN,IAAA,kCAEuBH,EAAKG,MAJzCL,EAAME,KAQJA,EAAKI,UAAUC,MAAK,EAAAC,SAAAX,SAAO,aAN7BG,uDAME,yBAE0B,EAAAX,cAAAoB,QAAOP,EAAKI,WAFtC,eAKFN,EAAQC,KACS,aAAfC,EAAKQ,MAKPV,4CALE,kBAEoBE,EAAKQ,MAFzB,WASDV,EAAAC,KAAA,sBAAAC,EAAAG,KAAA,QAAAH,EAAAS,YAAA,KAEGT,EAAKU,OACPZ,EAAQC,KAARD,QAAAE,EAAqBA,KAArBF,YAAAE,EAAAW,MAAAb,KAGFA,EAAQC,SAHND,EAAQC,KAAR,QAAqBC,EAAKG,KAA1B,gCAA8DH,EAAKU,QAAnE,KAWFZ,EAAQC,KAARD,qBAAAE,EAAmCA,KAAnCF,iBAEAA,EAAQC,KAPQ,aAAdC,EAAKY,KAaPd,oEAbE,6BAE+BE,EAAKY,KAFpC,KAKFd,EAAQC,KAAR,sBAAmCC,EAAKa,UAa0Bf,EAAnBgB,KAV1B,aAAnBd,EAAKe,UAWHD,gDAXF,2BAYkBd,EAAAe,WAGnBjB,EAAAC,KAAA,iCAAAC,EAAAgB,SARDC,aAAAtB,QAAQuB,QAAQC,QAAQrB,EAAS,8BAG7BsB,mBAAqB,SAACtB,EAADuB,GAAyC,GAAnBP,GAAmBO,EAA7BC,QACjCR,GACFhB,EAAQyB,UAAU,2CAElBzB,EAAQyB,UAAU,iHAKpB1B,YACAuB","file":"summary.js","sourcesContent":["import builder from 'botbuilder';\nimport equals from 'lodash/fp/equals';\nimport { oxford } from 'humanize-plus';\nimport pick from 'lodash/fp/pick';\nimport pluck from 'lodash/fp/pluck';\n\nconst fields = [\n  { name: 'type', display: 'App or bot?' },\n  { name: 'newOrExisting', display: 'New or existing?' },\n  { name: 'platforms', display: 'Platforms' },\n  { name: 'users', display: '# of users' },\n  { name: 'description', display: 'Description' },\n  { name: 'stack', display: 'Tech stack' },\n  { name: 'history', display: 'History' },\n  { name: 'devs', display: '# of devs' },\n  { name: 'team', display: 'Work with team?' },\n  { name: 'location', display: 'Location' },\n  { name: 'startDate', display: 'Start date' },\n  { name: 'contact', display: 'Contact' },\n];\n\nconst filterFields = pick(pluck('name', fields));\n\nconst giveSummary = session => {\n  session.send('Okay, let me see if I have this straight.');\n  const data = filterFields(session.privateConversationData);\n\n  session.send(data.newOrExisting === 'greenfield' ?\n    `You want to build a new ${data.type}.` :\n    `You need help with an existing ${data.type}`,\n  );\n\n  session.send(\n    data.platforms.find(equals('Not sure')) ?\n      'You\\'re not sure what platforms you\\'re interested in.' :\n      `You're interested in ${oxford(data.platforms)} platforms.`,\n  );\n\n  session.send(\n    data.users === 'Not sure' ?\n      'You\\'re not sure how many users you expect' :\n      `You anticipate ${data.users} users.`,\n  );\n\n  session.send(`You described your ${data.type} as \"${data.description}\"`);\n\n  if (data.stack) {\n    session.send(`Your ${data.type} runs on ${data.stack}.`);\n  }\n\n  if (data.history) {\n    session.send(`Your ${data.type} has been in development for ${data.history}.`);\n  }\n\n  session.send(`You say you need \"${data.devs}\" developers.`);\n\n  session.send(\n    data.team === 'not sure' ?\n      'You\\'re not sure whether you want us to work with a team or alone.' :\n      `Make Apps will be working ${data.team}.`,\n  );\n\n  session.send(`You are located in ${data.location}`);\n\n  session.send(\n    data.startDate === 'not sure' ?\n      'You\\'re not sure when you want to get started.' :\n      `You want to get started ${data.startDate}`,\n  );\n\n  session.send(`You told us to contact you by ${data.contact}`);\n\n  builder.Prompts.confirm(session, 'Does this all look right?');\n};\n\nconst handleConfirmation = (session, { response: looksCorrect }) => {\n  if (looksCorrect) {\n    session.endDialog('Great! We\\'ll be in touch with you soon.');\n  } else {\n    session.endDialog('Ah, whoops. Soon you\\'ll be able to correct your entries, but for now we have to start over.');\n  }\n};\n\nexport default [\n  giveSummary,\n  handleConfirmation,\n];\n"]}