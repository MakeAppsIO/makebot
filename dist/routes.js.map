{"version":3,"sources":["routes.js"],"names":["require","bot","contact","description","devs","existing","greenfield","history","location","newOrExisting","platforms","stack","startDate","summary","team","users","sharedRoutes","routesFor","type","appRoutes","botRoutes","routes","app","forEach","dialog","module","exports"],"mappings":"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","file":"routes.js","sourcesContent":["const { bot } = require('./initialize');\nconst contact = require('./dialogs/contact');\nconst description = require('./dialogs/description');\nconst devs = require('./dialogs/devs');\nconst existing = require('./dialogs/existing');\nconst greenfield = require('./dialogs/greenfield');\nconst history = require('./dialogs/history');\nconst location = require('./dialogs/location');\nconst newOrExisting = require('./dialogs/newOrExisting');\nconst platforms = require('./dialogs/platforms');\nconst stack = require('./dialogs/stack');\nconst startDate = require('./dialogs/startDate');\nconst summary = require('./dialogs/summary');\nconst team = require('./dialogs/team');\nconst users = require('./dialogs/users');\n\nconst sharedRoutes = {\n  contact: '/contact',\n  devs: '/devs',\n  location: '/location',\n  startDate: '/startDate',\n  summary: '/summary',\n  team: '/team',\n};\n\nconst routesFor = type => ({\n  description: `/${type}/description`,\n  existing: `/${type}/existing`,\n  greenfield: `/${type}/greenfield`,\n  history: `/${type}/history`,\n  newOrExisting: `/${type}/newOrExisting`,\n  platforms: `/${type}/platforms`,\n  stack: `/${type}/stack`,\n  users: `/${type}/users`,\n});\n\nconst appRoutes = routesFor('app');\nconst botRoutes = routesFor('bot');\n\nconst routes = {\n  app: { ...sharedRoutes, ...appRoutes },\n  bot: { ...sharedRoutes, ...botRoutes },\n};\n\n['app', 'bot'].forEach(type => {\n  bot.dialog(routes[type].newOrExisting, newOrExisting(type));\n  bot.dialog(routes[type].existing, existing(type));\n  bot.dialog(routes[type].greenfield, greenfield(type));\n  bot.dialog(routes[type].platforms, platforms(type));\n  bot.dialog(routes[type].users, users(type));\n  bot.dialog(routes[type].description, description(type));\n  bot.dialog(routes[type].stack, stack(type));\n  bot.dialog(routes[type].history, history(type));\n});\n\nbot.dialog(sharedRoutes.devs, devs);\nbot.dialog(sharedRoutes.team, team);\nbot.dialog(sharedRoutes.location, location);\nbot.dialog(sharedRoutes.startDate, startDate);\nbot.dialog(sharedRoutes.contact, contact);\nbot.dialog(sharedRoutes.summary, summary);\n\nmodule.exports = routes;\n"]}