{"version":3,"sources":["routes.js"],"names":["_initialize","require","_contact","_description","_devs","_greenfield","_location","_newOrExisting","_platforms","_stack","_startDate","_summary","_team","_users","sharedRoutes","contact","devs","location","startDate","summary","team","routesFor","type","description","existing","greenfield","newOrExisting","platforms","stack","users","appRoutes","botRoutes","routes","app","bot","forEach","dialog","_newOrExisting2","default","_greenfield2","_platforms2","_users2","_description2","_stack2","_devs2","_team2","_location2","_startDate2","_contact2","_summary2"],"mappings":"2TAAAA,YAAAC,QAAA,gBACAC,SAAAD,QAAA,gEACAE,aAAAF,QAAA,4EACAG,MAAAH,QAAA,uDACAI,YAAAJ,QAAA,yEACAK,UAAAL,QAAA,mEACAM,eAAAN,QAAA,kFACAO,WAAAP,QAAA,sEAPAQ,OAAAR,QAAA,0DASAS,WAAAT,QAAA,sEARAU,SAAAV,QAAA,gEAUAW,MAAAX,QAAA,uDACAY,OAAAZ,QAAA,0DAVAa,cAaEC,QAAS,WACTC,KAAM,QACNC,SAAU,YAdZC,UAAA,aAgBEC,QAAS,WACTC,KAAM,SAGFC,UAAY,SAAAC,GAAA,OAChBC,YAAAA,IAAiBD,EAAjB,eACAE,SAAAA,IAAcF,EAAd,YApBFG,WAAAA,IAAAH,EAAA,cAsBEI,cAAAA,IAAmBJ,EAAnB,iBACAK,UAAAA,IAAeL,EAAf,aACAM,MAAAA,IAAWN,EAAX,SAvBFO,MAAAA,IAAAP,EAAA,WA2BMQ,UAAYT,UAAU,OA1B5BU,UAAAV,UAAA,OA6BMW,QACJC,IAAAA,YAAUnB,aAAiBgB,WA7B7BI,IAAAA,YAAApB,aAAAiB,aAiCC,MAAO,OAAOI,QAAQ,SAAAb,GAhCvBtB,YAAAkC,IAAAE,OAAAJ,OAAAV,GAAAI,eAAA,EAAAW,gBAAAC,SAAAhB,IAkCEtB,YAAAkC,IAAIE,OAAOJ,OAAOV,GAAMG,YAAY,EAAAc,aAAAD,SAAWhB,IAC/CtB,YAAAkC,IAAIE,OAAOJ,OAAOV,GAAMK,WAAW,EAAAa,YAAAF,SAAUhB,IAC7CtB,YAAAkC,IAAIE,OAAOJ,OAAOV,GAAMO,OAAO,EAAAY,QAAAH,SAAMhB,IAnCvCtB,YAAAkC,IAAAE,OAAAJ,OAAAV,GAAAC,aAAA,EAAAmB,cAAAJ,SAAAhB,IAqCEtB,YAAAkC,IAAIE,OAAOJ,OAAOV,GAAMM,OAAO,EAAAe,QAAAL,SAAMhB,MApCvCtB,YAAAkC,IAAAE,OAAAtB,aAAAE,KAAA4B,OAAAN,SAwCAtC,YAAAkC,IAAIE,OAAOtB,aAAaM,KAAxByB,OAAAP,SACAtC,YAAAkC,IAAIE,OAAOtB,aAAaG,SAAxB6B,WAAAR,SACAtC,YAAAkC,IAAIE,OAAOtB,aAAaI,UAAxB6B,YAAAT,SAzCAtC,YAAAkC,IAAAE,OAAAtB,aAAAC,QAAAiC,UAAAV,SA2CAtC,YAAAkC,IAAIE,OAAOtB,aAAaK,QAAxB8B,UAAAX,yBAEeN","file":"routes.js","sourcesContent":["import { bot } from './initialize';\nimport contact from './dialogs/contact';\nimport description from './dialogs/description';\nimport devs from './dialogs/devs';\nimport greenfield from './dialogs/greenfield';\nimport location from './dialogs/location';\nimport newOrExisting from './dialogs/newOrExisting';\nimport platforms from './dialogs/platforms';\nimport stack from './dialogs/stack';\nimport startDate from './dialogs/startDate';\nimport summary from './dialogs/summary';\nimport team from './dialogs/team';\nimport users from './dialogs/users';\n\nconst sharedRoutes = {\n  contact: '/contact',\n  devs: '/devs',\n  location: '/location',\n  startDate: '/startDate',\n  summary: '/summary',\n  team: '/team',\n};\n\nconst routesFor = type => ({\n  description: `/${type}/description`,\n  existing: `/${type}/existing`,\n  greenfield: `/${type}/greenfield`,\n  newOrExisting: `/${type}/newOrExisting`,\n  platforms: `/${type}/platforms`,\n  stack: `/${type}/stack`,\n  users: `/${type}/users`,\n});\n\nconst appRoutes = routesFor('app');\nconst botRoutes = routesFor('bot');\n\nconst routes = {\n  app: { ...sharedRoutes, ...appRoutes },\n  bot: { ...sharedRoutes, ...botRoutes },\n};\n\n['app', 'bot'].forEach(type => {\n  bot.dialog(routes[type].newOrExisting, newOrExisting(type));\n  bot.dialog(routes[type].greenfield, greenfield(type));\n  bot.dialog(routes[type].platforms, platforms(type));\n  bot.dialog(routes[type].users, users(type));\n  bot.dialog(routes[type].description, description(type));\n  bot.dialog(routes[type].stack, stack(type));\n});\n\nbot.dialog(sharedRoutes.devs, devs);\nbot.dialog(sharedRoutes.team, team);\nbot.dialog(sharedRoutes.location, location);\nbot.dialog(sharedRoutes.startDate, startDate);\nbot.dialog(sharedRoutes.contact, contact);\nbot.dialog(sharedRoutes.summary, summary);\n\nexport default routes;\n"]}