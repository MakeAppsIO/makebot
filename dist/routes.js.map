{"version":3,"sources":["routes.js"],"names":["_initialize","require","_contact","_description","_devs","_greenfield","_location","_platform","_stack","_start","_startDate","_team","_users","routesFor","type","contact","description","devs","existing","greenfield","location","platform","stack","startDate","start","team","users","routes","app","bot","forEach","dialog","_start2","default","_greenfield2","_platform2","_users2","_description2","_devs2","_team2","_location2","_startDate2","_contact2","_stack2"],"mappings":"2IAAA,IAAAA,aAAAC,QAAA,gBACAC,SAAAD,QAAA,gEACAE,aAAAF,QAAA,4EACAG,MAAAH,QAAA,uDACAI,YAAAJ,QAAA,yEACAK,UAAAL,QAAA,mEALAM,UAAAN,QAAA,mEAOAO,OAAAP,QAAA,0DANAQ,OAAAR,QAAA,0DAQAS,WAAAT,QAAA,sEACAU,MAAAV,QAAA,uDACAW,OAAAX,QAAA,0DAEMY,UAAY,SAAAC,GAAA,OAChBC,QAAYD,EAAZ,WACAE,YAAgBF,EAAhB,eAZFG,KAAAH,EAAA,QAcEI,SAAaJ,EAAb,YACAK,WAAeL,EAAf,cACAM,SAAaN,EAAb,YAfFO,SAAAP,EAAA,YAiBEQ,MAAUR,EAAV,SACAS,UAAcT,EAAd,aACAU,MAAUV,EAAV,SAlBFW,KAAAX,EAAA,QAoBEY,MAAUZ,EAAV,WAnBFa,QAuBEC,IAAKf,UAAU,OACfgB,IAAKhB,UAAU,SAGhB,MAAO,OAAOiB,QAAQ,SAAAhB,GACrBd,YAAA6B,IAAIE,OAAOJ,OAAOb,GAAMU,OAAO,EAAAQ,QAAAC,SAAMnB,IACrCd,YAAA6B,IAAIE,OAAOJ,OAAOb,GAAMK,YAAY,EAAAe,aAAAD,SAAWnB,IA3BjDd,YAAA6B,IAAAE,OAAAJ,OAAAb,GAAAO,UAAA,EAAAc,WAAAF,SAAAnB,IA6BEd,YAAA6B,IAAIE,OAAOJ,OAAOb,GAAMY,OAAO,EAAAU,QAAAH,SAAMnB,IACrCd,YAAA6B,IAAIE,OAAOJ,OAAOb,GAAME,aAAa,EAAAqB,cAAAJ,SAAYnB,IACjDd,YAAA6B,IAAIE,OAAOJ,OAAOb,GAAMG,KAAxBqB,OAAAL,SA9BFjC,YAAA6B,IAAAE,OAAAJ,OAAAb,GAAAW,KAAAc,OAAAN,SAgCEjC,YAAA6B,IAAIE,OAAOJ,OAAOb,GAAMM,SAAxBoB,WAAAP,SACAjC,YAAA6B,IAAIE,OAAOJ,OAAOb,GAAMS,UAAxBkB,YAAAR,SACAjC,YAAA6B,IAAIE,OAAOJ,OAAOb,GAAMC,QAAxB2B,UAAAT,SAjCFjC,YAAA6B,IAAAE,OAAAJ,OAAAb,GAAAQ,MAAAqB,QAAAV,2BAqCeN","file":"routes.js","sourcesContent":["import { bot } from './initialize';\nimport contact from './dialogs/contact';\nimport description from './dialogs/description';\nimport devs from './dialogs/devs';\nimport greenfield from './dialogs/greenfield';\nimport location from './dialogs/location';\nimport platform from './dialogs/platform';\nimport stack from './dialogs/stack';\nimport start from './dialogs/start';\nimport startDate from './dialogs/startDate';\nimport team from './dialogs/team';\nimport users from './dialogs/users';\n\nconst routesFor = type => ({\n  contact: `${type}/contact`,\n  description: `${type}/description`,\n  devs: `${type}/devs`,\n  existing: `${type}/existing`,\n  greenfield: `${type}/greenfield`,\n  location: `${type}/location`,\n  platform: `${type}/platform`,\n  stack: `${type}/stack`,\n  startDate: `${type}/startDate`,\n  start: `${type}/start`,\n  team: `${type}/team`,\n  users: `${type}/users`,\n});\n\nconst routes = {\n  app: routesFor('app'),\n  bot: routesFor('bot'),\n};\n\n['app', 'bot'].forEach(type => {\n  bot.dialog(routes[type].start, start(type));\n  bot.dialog(routes[type].greenfield, greenfield(type));\n  bot.dialog(routes[type].platform, platform(type));\n  bot.dialog(routes[type].users, users(type));\n  bot.dialog(routes[type].description, description(type));\n  bot.dialog(routes[type].devs, devs);\n  bot.dialog(routes[type].team, team);\n  bot.dialog(routes[type].location, location);\n  bot.dialog(routes[type].startDate, startDate);\n  bot.dialog(routes[type].contact, contact);\n  bot.dialog(routes[type].stack, stack);\n});\n\nexport default routes;\n"]}