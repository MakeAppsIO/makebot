{"version":3,"sources":["lib/gather.js"],"names":["require","bot","builder","get","shortid","without","module","exports","prompt","choices","randomId","choicesLeft","chosenSoFar","dialog","SimpleDialog","session","results","choiceIndex","userSaidDone","length","console","log","endDialogWithResult","undefined","choice","Prompts"],"mappings":";;eAAgBA,QAAQ,eAAR,C;;MAARC,G,YAAAA,G;;AACR,MAAMC,UAAUF,QAAQ,YAAR,CAAhB;AACA,MAAMG,MAAMH,QAAQ,eAAR,CAAZ;AACA,MAAMI,UAAUJ,QAAQ,SAAR,CAAhB;AACA,MAAMK,UAAUL,QAAQ,mBAAR,CAAhB;;AAEAM,OAAOC,OAAP,GAAiB,CAACC,MAAD,EAASC,OAAT,KAAqB;AACpC,QAAMC,WAAWN,SAAjB;;AAEA,MAAIO,cAAcF,OAAlB;AACA,MAAIG,cAAc,EAAlB;;AAEAX,MAAIY,MAAJ,CAAWH,QAAX,EAAqB,IAAIR,QAAQY,YAAZ,CAAyB,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAClE,UAAMC,cAAcd,IAAI,gBAAJ,EAAsBa,OAAtB,CAApB;AACA,UAAME,eAAeD,gBAAgBN,YAAYQ,MAAjD;;AAEAC,YAAQC,GAAR,CAAYT,WAAZ,EAAyBD,WAAzB,EAAsCM,WAAtC;;AAEA,QAAIC,YAAJ,EAAkB;AAChB,aAAOH,QAAQO,mBAAR,CAA4BV,WAA5B,CAAP;AACD;;AAED,QAAIK,gBAAgBM,SAApB,EAA+B;AAC7B,YAAMC,SAASb,YAAYM,WAAZ,CAAf;AACA;AACAL,oBAAc,CAAC,GAAGA,WAAJ,EAAiBY,MAAjB,CAAd;AACAb,oBAAcN,QAAQ,CAACmB,MAAD,CAAR,EAAkBb,WAAlB,CAAd;AACA;AACD;;AAEDS,YAAQC,GAAR,CAAYT,WAAZ,EAAyBD,WAAzB;;AAEA,QAAI,CAACA,YAAYQ,MAAjB,EAAyB;AACvB,aAAOJ,QAAQO,mBAAR,CAA4BV,WAA5B,CAAP;AACD;;AAED,WAAOA,YAAYO,MAAZ,GACLjB,QAAQuB,OAAR,CAAgBD,MAAhB,CAAuBT,OAAvB,EAAgC,gBAAhC,EAAkD,CAAC,GAAGJ,WAAJ,EAAiB,MAAjB,CAAlD,CADK,GAELT,QAAQuB,OAAR,CAAgBD,MAAhB,CAAuBT,OAAvB,EAAgCP,MAAhC,EAAwC,CAAC,GAAGG,WAAJ,EAAiB,MAAjB,CAAxC,CAFF;AAGD,GA3BoB,CAArB;;AA6BA,SAAOD,QAAP;AACD,CApCD","file":"gather.js","sourcesContent":["const { bot } = require('../initialize');\nconst builder = require('botbuilder');\nconst get = require('lodash/fp/get');\nconst shortid = require('shortid');\nconst without = require('lodash/fp/without');\n\nmodule.exports = (prompt, choices) => {\n  const randomId = shortid();\n\n  let choicesLeft = choices;\n  let chosenSoFar = [];\n\n  bot.dialog(randomId, new builder.SimpleDialog((session, results) => {\n    const choiceIndex = get('response.index', results);\n    const userSaidDone = choiceIndex === choicesLeft.length;\n\n    console.log(chosenSoFar, choicesLeft, choiceIndex);\n\n    if (userSaidDone) {\n      return session.endDialogWithResult(chosenSoFar);\n    }\n\n    if (choiceIndex !== undefined) {\n      const choice = choicesLeft[choiceIndex];\n      /* eslint-disable fp/no-mutation */\n      chosenSoFar = [...chosenSoFar, choice];\n      choicesLeft = without([choice], choicesLeft);\n      /* eslint-enable fp/no-mutation */\n    }\n\n    console.log(chosenSoFar, choicesLeft);\n\n    if (!choicesLeft.length) {\n      return session.endDialogWithResult(chosenSoFar);\n    }\n\n    return chosenSoFar.length ?\n      builder.Prompts.choice(session, 'Anything else?', [...choicesLeft, 'Nope']) :\n      builder.Prompts.choice(session, prompt, [...choicesLeft, 'None']);\n  }));\n\n  return randomId;\n};\n"]}